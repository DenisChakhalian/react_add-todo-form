{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","components/TodoForm/TodoForm.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","completed","id","classnames","TodoList","todos","map","username","TodoForm","onAdd","useState","setTitle","hasTitleError","setHasTitleError","selectedUserId","setSelectedUserId","hasSelectedUserIdError","setHasSelectedUserIdError","action","method","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","disabled","usersFromServer","todosWithUsers","userId","find","App","visibleTodos","setVisibleTodos","prevTodos","maxId","Math","max","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.968dfe09.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../interfaces/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport { Todo } from '../../interfaces/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { user, title, completed } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classnames('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../interfaces/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\n\nimport usersFromServer from '../../api/users';\n\ntype Props = {\n  onAdd: (title:string, selectedUserId:number) => void;\n};\n\nexport const TodoForm: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [hasSelectedUserIdError, setHasSelectedUserIdError] = useState(false);\n\n  const resetForm = () => {\n    setTitle('');\n    setSelectedUserId(0);\n    setHasSelectedUserIdError(false);\n    setHasTitleError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasSelectedUserIdError(!selectedUserId);\n\n    if (!title || !selectedUserId) {\n      return;\n    }\n\n    onAdd(title, selectedUserId);\n\n    resetForm();\n  };\n\n  const handleOnChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleOnChangeUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+event.target.value);\n    setHasSelectedUserIdError(false);\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label>\n          Title:&nbsp;\n\n          <input\n            type=\"text\"\n            placeholder=\"Enter a title\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleOnChangeTitle}\n          />\n        </label>\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label>\n          User:&nbsp;\n\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUserId}\n            onChange={handleOnChangeUser}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n        </label>\n        {hasSelectedUserIdError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { TodoForm } from './components/TodoForm';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './interfaces/Todo';\nimport { User } from './interfaces/User';\n\nconst todosWithUsers: Todo[] = todosFromServer\n  .map((todo: Todo) => {\n    return {\n      ...todo,\n      user: usersFromServer\n        .find((user: User) => user.id === todo.userId) || null,\n    };\n  });\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setVisibleTodos]\n    = useState<Todo[]>(todosWithUsers);\n\n  const onAddHendler = (title: string, selectedUserId:number) => {\n    setVisibleTodos((prevTodos) => {\n      const maxId: number = Math.max(...prevTodos.map(todo => todo.id));\n\n      return [\n        ...prevTodos,\n        {\n          id: maxId + 1,\n          title,\n          completed: false,\n          userId: selectedUserId,\n          user: usersFromServer.find(user => user.id === selectedUserId)\n            || null,\n        },\n      ];\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm onAdd={onAddHendler} />\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}